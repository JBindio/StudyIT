1과목 1-1
1.소프트웨어 공학
	- 소프트웨어 공학의 3R
		- 역공학(Reverse Engineering)
		- 재공학(Re- Engineering)
		- 재사용(ReUse)
			- 합성중심
				- 기존있는것
			- 생성중심
				- 추상화

2.개발 단계
 계획 - 분석 - 설계 - 구현 - 테스트 - 유지
 
3.개발 방법론
	1)구조적(절차지향) 방법론(하향식)
	2)객체지향 방법론(상향식)
	- 캡슐화(정보은닉)
	- 상속
	- 다형성
		- 오버로딩
		- 오버라이딩(재정의)
	- 추상화
		- 추상후 세부구현
	3)CBD 방법론
	- 모듈단위 -> 끼워맞추기
	4)애자일 방법론 ★
		- 민첩하고 신속하게
		- 고객중심
		- 엑스칸크린
			- XP
				- 용기, 단순성, 의사소통, 피드백, 존중
				- 12가지
			- 스크럼
				- 스플린트 단위(짧은기간)
				- 매일 15분 회의
4.개발 모델
	1)폭포수 모델(하향식)
		- 순차적(선형 순차모델)
		- 요구사항 변경 어려움
	2)프로토타입 모델
		- 프로토타입(시제품) 구현
		- 장점
			- 신속한 개발
			- 변경, 폐기, 재사용 용이
		- 단점
			- 시간이 더 많이 들 수 있다
			- 폐기 비용
	3)나선형 모델
		- 위험분석 과정 추가
		- 대규모 프로젝트
		- 계획 - 위험분석 - 개발 - 고객평가
		- 점진적인 개발
	4)RAD(래피드 모델)
		- 매우 빠른 개발
		- CASE 도구 활용
	5)V 모델(폭포수 + 테스트)★
		- 단위 테스트
			- 정적 테스트
			- 동적 테스트
		- 통합 테스트
			- 상향식 테스트(driver)
			- 하향식 테스트(stub)
			- 빅뱅 테스트(한꺼번에)
			- 백곤 테스트(상향식 + 하향식)
		- 시스템 테스트
			- 기능 테스트
			- 비기능 테스트
		- 인수 테스트
			- 알파 테스트
				- 개발자 + 사용자
			- 베타 테스트
				- 사용자
				